function [Plot, Line, Text, Area, j] = PlotTransition(i, Trans, MaxClebschs, Color, Type, j)
%This function plots a single transition in a line with a marker
%i tells you which encoding used. i=6 is d=3, i=7 is d=5, i=8 is d=7. Trans
%gives all of the information on the transition being plotted. MaxClebschs
%gives the highest Clebschs Gordan Coefficient of all transitions, allowing
%us to normalize the transition, Color is the color to plot this
%transition, Type is what kind of transition it is: Encoded, Other, and
%Motional of these. j keeps track of the counts of this type of transition,
%allowing us to keep track of what color each particular encoded transition
%or other freq. is.
G = getGlobals;
disp(Trans);
Freq = str2double(Trans(1));
if G.SameHeight
    Height = G.SameHeightHeight;
else
    Height = str2double(Trans(9))/MaxClebschs;
end
if Type == "Encoded"
    if Trans(i) == "yes"
        j = j + 1;
        Line = line([Freq Freq], [0 Height], ...
            'Color', Color, ...
            'LineWidth', G.RelevantLineWidth, ...
            'LineStyle', G.EncodedLineStyle);
        Plot = plot([Freq Freq], [Height Height], '^', ...
            'MarkerEdge', Color, ...
            'MarkerFace', Color);
        if G.ShowRelevantText
            Text = text(Freq+G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', Color, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = area([Freq-G.Detuning Freq+G.Detuning], ...
            [Height*G.SweepHeight Height*G.SweepHeight], ...
            'FaceColor', Color, ...
            'LineStyle', 'none', ...
            'FaceAlpha', G.SweepAlpha);
    else
        ColorAlpha = [G.IrrelevantColor G.IrrelevantAlpha];
        Line = line([Freq Freq], [0 Height], ...
            'Color', ColorAlpha, ...
            'LineWidth', G.IrrelevantLineWidth, ...
            'LineStyle', G.EncodedLineStyle);
        Plot = scatter([Freq Freq], [Height Height], '^', ...
            'MarkerEdgeColor', G.IrrelevantColor, ...
            'MarkerFaceColor', G.IrrelevantColor);
        Plot.MarkerEdgeAlpha = G.IrrelevantAlpha/2;
        Plot.MarkerFaceAlpha = G.IrrelevantAlpha/2;
        if G.ShowIrrelevantText
            Text = text(Freq + G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', G.IrrelevantColor, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    end
elseif Type == "Other"
    if Trans(i) == "yes"
        j = j + 1;
        Line = line([Freq Freq], [0 Height], ...
            'Color', Color, ...
            'LineWidth', G.RelevantLineWidth, ...
            'LineStyle', G.OtherLineStyle);
        Plot = plot([Freq Freq], [Height Height], '^', ...
            'MarkerEdge', Color, ...
            'MarkerFace', Color);
        if G.ShowRelevantText
            Text = text(Freq+G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3)) ', F'' = ' num2str(Trans(4)) ', m_{F''} = ' num2str(Trans(5))], ...
                'Color', Color, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    else
        ColorAlpha = [G.IrrelevantColor G.IrrelevantAlpha];
        Line = line([Freq Freq], [0 Height], ...
            'Color', ColorAlpha, ...
            'LineWidth', G.IrrelevantLineWidth, ...
            'LineStyle', G.OtherLineStyle);
        Plot = scatter([Freq Freq], [Height Height], '^', ...
            'MarkerEdgeColor', G.IrrelevantColor, ...
            'MarkerFaceColor', G.IrrelevantColor);
        Plot.MarkerEdgeAlpha = G.IrrelevantAlpha/2;
        Plot.MarkerFaceAlpha = G.IrrelevantAlpha/2;
        if G.ShowIrrelevantText
            Text = text(Freq + G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3)) ', F'' = ' num2str(Trans(4)) ', m_{F''} = ' num2str(Trans(5))], ...
                'Color', G.IrrelevantColor, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    end
elseif Type == "MotionalEncoded"
    if G.SameHeight
        Height = G.SameHeightHeight;
    else
        Height = str2double(Trans(9))/MaxClebschs;
    end
    if str2double(Trans(10)) == 1
        LineStyle = G.MotionalLineStyle1;
        if ~G.SameHeight
            Height = Height*G.MotionalHeight1;
        end
    elseif str2double(Trans(10)) == 2
        LineStyle = G.MotionalLineStyle2;
        if ~G.SameHeight
            Height = Height*G.MotionalHeight2;
        end
    end
    if Trans(i) == "yes"
        Line = line([Freq Freq], [0 Height], ...
            'Color', Color, ...
            'LineWidth', G.RelevantLineWidth, ...
            'LineStyle', LineStyle);
        Plot = plot([Freq Freq], [Height Height], '^', ...
            'MarkerEdge', Color, ...
            'MarkerFace', G.SidebandMarkerColor);
        if G.ShowRelevantTextMotional
            Text = text(Freq+G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', Color, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    else
        ColorAlpha = [G.IrrelevantColor G.IrrelevantAlpha];
        Line = line([Freq Freq], [0 Height], ...
            'Color', ColorAlpha, ...
            'LineWidth', G.IrrelevantLineWidth, ...
            'LineStyle', LineStyle);
        Plot = scatter([Freq Freq], [Height Height], '^', ...
            'MarkerEdgeColor', G.IrrelevantColor, ...
            'MarkerFaceColor', G.IrrelevantColor);
        Plot.MarkerEdgeAlpha = G.IrrelevantAlpha/2;
        Plot.MarkerFaceAlpha = G.IrrelevantAlpha/2;
        if G.ShowIrrelevantTextMotional
            Text = text(Freq + G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', G.IrrelevantColor, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    end
elseif Type == "MotionalOther"
    if str2double(Trans(10)) == 1
        LineStyle = G.MotionalLineStyle1;
        if ~G.SameHeight
            Height = Height*G.MotionalHeight1;
        end
    elseif str2double(Trans(10)) == 2
        LineStyle = G.MotionalLineStyle2;
        if ~G.SameHeight
            Height = Height*G.MotionalHeight2;
        end
    end
    if Trans(i) == "yes"
        Line = line([Freq Freq], [0 Height], ...
            'Color', Color, ...
            'LineWidth', G.RelevantLineWidth, ...
            'LineStyle', LineStyle);
        Plot = plot([Freq Freq], [Height Height], '^', ...
            'MarkerEdge', Color, ...
            'MarkerFace', G.SidebandMarkerColor);
        if G.ShowRelevantTextMotional
            Text = text(Freq+G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', Color, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    else
        ColorAlpha = [G.IrrelevantColor G.IrrelevantAlpha];
        Line = line([Freq Freq], [0 Height], ...
            'Color', ColorAlpha, ...
            'LineWidth', G.IrrelevantLineWidth, ...
            'LineStyle', LineStyle);
        Plot = scatter([Freq Freq], [Height Height], '^', ...
            'MarkerEdgeColor', G.IrrelevantColor, ...
            'MarkerFaceColor', G.IrrelevantColor);
        Plot.MarkerEdgeAlpha = G.IrrelevantAlpha/2;
        Plot.MarkerFaceAlpha = G.IrrelevantAlpha/2;
        if G.ShowIrrelevantTextMotional
            Text = text(Freq + G.TextOffSet, G.TextHeight+Height, ...
                ['F = ' num2str(Trans(2)) ', m_F = ' num2str(Trans(3))], ...
                'Color', G.IrrelevantColor, ...
                'FontSize', G.TextFontSize);
            set(Text,'Rotation',90);
        else
            Text = false;
        end
        Area = false;
    end
end
end